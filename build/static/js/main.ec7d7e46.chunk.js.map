{"version":3,"sources":["LoginOrRegister.js","Filters.js","SavedCities.js","Weather.js","App.js","index.js"],"names":["initialState","login","username","password","LoginOrRegister","register","useState","state","setState","handleInputChange","e","prevState","target","name","value","Container","className","Row","Col","md","xl","Form","Group","Label","Control","isInvalid","undefined","errMessage","onChange","type","Feedback","success","Button","onClick","operation","variant","Filters","props","filterState","changeFilterValue","changeFilterOperation","changeWeatherStatus","handleRangeChange","id","val","handleFilterChange","key","currentTarget","control","DropdownButton","title","weatherStatus","onSelect","console","log","Dropdown","Item","eventKey","as","map","i","FormGroup","FormLabel","ButtonGroup","size","ToggleButton","active","disabled","SavedCities","savedCities","temp","min","max","setFilterState","chooseFilterType","rows","filterValue","filter","row","values","filterLessThan","arguments","filterGreaterThan","data","useMemo","columns","accessor","useTable","filterTypes","filters","useFilters","prepareRow","preFilteredRows","setFilter","Card","Header","newArr","Body","length","Accordion","original","cityName","weatherData","weather","main","description","Math","floor","temp_min","temp_max","Weather","cities","open","maxResults","placeholder","options","saveCity","App","usersRegistered","setUsersRegistered","isAuthenticated","setAuthentication","setSavedCities","miniCities","city","stateID","state_id","stateName","state_name","lat","lng","fetch","then","res","json","newCity","find","cityObj","catch","err","user","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ec7d7e46.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { Col, Container, Button, Form, Row } from \"react-bootstrap\"\n\nconst initialState = {\n  login: true,\n  username: \"\",\n  password: \"\",\n} \n\nconst LoginOrRegister = ({ login, register }) => {\n  const [state, setState] = useState(initialState)\n  const changeLoginOrRegister = () => setState(prevState => ({ ...initialState, login: !prevState.login }))\n  const handleInputChange = e => setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\n  const doLoginOrRegister = () => {\n    if(!state.username || !state.password) return setState({ ...state, errMessage: \"Username or Password cannot be empty!\" })\n\n    const operation = state.login ?\n        login({\n          username: state.username,\n          password: state.password\n        })\n      :\n        register({\n          username: state.username,\n          password: state.password\n        })\n\n    if(operation === false) setState({ ...initialState, login: state.login, errMessage : state.login ? \"No user found with given credentials!\" : \"You already have an account...\" })\n    else setState({ ...initialState, success: true })\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      <Row  className=\"justify-content-center\">\n        <Col md={6} xl={4}>\n          <Form>\n            <Form.Group className=\"my-2\">\n              <Form.Label>{state.login ? null : \"Create\"} Username</Form.Label>\n              <Form.Control isInvalid={state.errMessage !== undefined} onChange={handleInputChange} name=\"username\" type=\"text\" value={state.username} />\n            </Form.Group>\n            <Form.Group className=\"my-2\">\n              <Form.Label>{state.login ? null : \"Create\"} Password</Form.Label>\n              <Form.Control isInvalid={state.errMessage !== undefined} onChange={handleInputChange} name=\"password\" type=\"password\" value={state.password}/>\n              <Form.Control.Feedback className=\"text-center\" type=\"invalid\">{state.errMessage}</Form.Control.Feedback>\n              {state.success ? <p className=\"text-success text-center m-2\">Registration Succesful</p> : null }\n            </Form.Group>\n            <Form.Group className=\"text-center m-3\">\n              <Button onClick={doLoginOrRegister}>{state.login ? \"Login\" : \"Register\"}</Button>\n              <Button onClick={changeLoginOrRegister} variant=\"link\">{state.login ? \"Don't have an account\" : \"Already have an account\"}</Button>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default LoginOrRegister","import { DropdownButton, Dropdown, FormGroup, FormLabel, ButtonGroup, ToggleButton } from \"react-bootstrap\"\nimport RangeSlider from \"react-bootstrap-range-slider\"\n\nconst Filters = props => {\n  const [filterState, changeFilterValue, changeFilterOperation, changeWeatherStatus] = props.filterState\n  const handleRangeChange = e => changeFilterValue({ id: e.target.name, val: e.target.value })\n  const handleFilterChange = e => {\n    let key = e.currentTarget.control.name\n    let val = e.currentTarget.control.value\n\n    changeFilterOperation({ id: key, val: filterState[key][0] === 3 ? undefined : val })\n  }\n  const handleWeatherStatusChange = (e) => {\n    console.log(e)\n    changeWeatherStatus({ id: \"weatherStatus\", val: e })\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <div className=\"flex-grow-1 text-center\">\n        <DropdownButton title={filterState.weatherStatus} onSelect={handleWeatherStatusChange}>\n          <Dropdown.Item eventKey=\"All\" as=\"button\">All</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Clear\" as=\"button\">Clear</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Clouds\" as=\"button\">Clouds</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Storms\" as=\"button\">Storms</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Drizzle\" as=\"button\">Drizzle</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Rain\" as=\"button\">Rain</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Snow\" as=\"button\">Snow</Dropdown.Item>\n        </DropdownButton>\n      </div>\n      <div className=\"flex-grow-1\">\n        {[\"temp\", \"min\", \"max\"].map((val, i) => (\n          <FormGroup key={i}>\n            <FormLabel>\n              {!i ? \"Temperature\" : \n                i === 1 ? \"Min\" : \"Max\" }\n            </FormLabel>\n            <ButtonGroup size=\"sm\" className=\"float-end\">\n              <ToggleButton name={val} active={filterState[val][0] === 0} id={`${val + 0}`} disabled={filterState[val][0] === 3} onClick={handleFilterChange} value={0} variant=\"primary\" className=\"border text-info\">&lt;</ToggleButton>\n              <ToggleButton name={val} active={filterState[val][0] === 1} id={`${val + 1}`} disabled={filterState[val][0] === 3} onClick={handleFilterChange} value={1} variant=\"primary\" className=\"border text-info\">=</ToggleButton>\n              <ToggleButton name={val} active={filterState[val][0] === 2} id={`${val + 2}`} disabled={filterState[val][0] === 3} onClick={handleFilterChange} value={2} variant=\"primary\" className=\"border text-info\">&gt;</ToggleButton>\n              <ToggleButton name={val} active={filterState[val][0] === 3} id={`${val + 3}`} value={3} onClick={handleFilterChange} variant=\"primary\" className=\"border text-info\">{filterState[val][0] === 3 ? \"Off\" : \"On\"}</ToggleButton>\n            </ButtonGroup>\n            <RangeSlider disabled={filterState[val][0] === 3} name={val} onChange={handleRangeChange} value={filterState[val][1]}/>\n          </FormGroup>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Filters\n","import React, { useMemo, useState } from \"react\";\nimport { useTable, useFilters } from \"react-table\";\nimport { Card, Accordion, Container, Row, Col } from \"react-bootstrap\";\nimport Filters from \"./Filters.js\"\n\n\nexport default function SavedCities({ savedCities }) {\n  const [filterState, setFilterState] = useState({\n    weatherStatus: \"All\",\n    temp: [3,75],\n    min: [3,25],\n    max: [3,50],\n  })\n  const changeWeatherStatus = ({ id, val }) => {  \n    setFilterState({ ...filterState, [id]: val })\n    setFilter(id, val)\n  }\n  const changeFilterValue = ({ id, val }) => {\n    let newArr = [...filterState[id]]\n    newArr[1] = val\n    \n    setFilterState({ ...filterState, [id]: newArr })\n    setFilter(id, val)\n  }\n  const changeFilterOperation = ({ id, val = 0 }) => {\n    let newArr = [...filterState[id]]\n    newArr[0] = +val\n    \n    setFilterState({ ...filterState, [id]: newArr })\n  }\n  function chooseFilterType(rows, [id], filterValue){\n    if(id === \"weatherStatus\"){\n      return filterState[\"weatherStatus\"] === \"All\" ? rows : (\n        rows.filter(row => row.values[id] === filterValue)\n      )\n    }\n    else {\n      switch (filterState[id][0]) {\n        case 0:\n          return filterLessThan(...arguments)\n        case 1:\n          return \"equal\"\n        case 2:\n          return filterGreaterThan(...arguments)\n        default:\n          return rows\n      }\n    }\n  }\n  function filterGreaterThan(rows, [id], filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue >= filterValue\n    })\n  }\n  function filterLessThan(rows, [id], filterValue) {\n    return rows.filter(row => {\n      const rowValue = row.values[id]\n      return rowValue <= filterValue\n    })\n  }\n  const data = useMemo(() => savedCities, [savedCities])\n  const columns = useMemo(() => [\n    { accessor: \"cityName\", id: \"city\" },\n    { accessor: \"weatherData.weather[0].main\", id: \"weatherStatus\", filter: \"chooseFilterType\" },\n    { accessor: \"weatherData.main.temp\", id: \"temp\", filter: \"chooseFilterType\" },\n    { accessor: \"weatherData.main.temp_min\", id: \"min\", filter: \"chooseFilterType\" },\n    { accessor: \"weatherData.main.temp_max\", id: \"max\", filter: \"chooseFilterType\" },\n  ], [])\n  const {\n    rows,\n    preFilteredRows,\n    prepareRow,\n    setFilter,\n    state\n  } = useTable(\n    {\n      columns,\n      data,\n      filterTypes: useMemo(() => ({ chooseFilterType }), [filterState]),\n      initialState: useMemo(() => ({ filters: [{ id:\"weatherStatus\", value: \"All\" }]}), []),\n    },\n    useFilters\n  )\n\n  return (\n    <Card>\n      <Card.Header>\n        <Filters filterState={[filterState, changeFilterValue, changeFilterOperation, changeWeatherStatus]}/>\n      </Card.Header>\n      <Card.Body>\n        {!savedCities.length ? (\n          <p className=\"text-center\">You haven't saved any cities yet!</p>\n        ) : (\n          <Accordion>\n            {rows.map(row => {\n              const { original } = row;\n              prepareRow(row)\n              return (\n                <Accordion.Item key={`city${row.id}`} eventKey={row.id}>\n                  <Accordion.Header>{original.cityName}</Accordion.Header>\n                  <Accordion.Body>\n                    {!original.weatherData ? (\n                      <p className=\"text-danger text-center\">Weather data on this city could not be fetched!</p>\n                    ) : (\n                      <Container>\n                        <Row>\n                          <Col>\n                            <p>Main: {original.weatherData.weather[0].main}</p>\n                            <p>Description: {original.weatherData.weather[0].description}</p>\n                          </Col>\n                          <Col>\n                            <p>Main Temperature: {Math.floor(original.weatherData.main.temp)}</p>\n                            <p>Min: {Math.floor(original.weatherData.main.temp_min)}</p>\n                            <p>Max: {Math.floor(original.weatherData.main.temp_max)}</p>\n                          </Col>\n                        </Row>\n                      </Container>\n                    )}\n                  </Accordion.Body>\n                </Accordion.Item>\n              )\n            })}\n          </Accordion>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}","import { Container, Row, Col, Form } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport SavedCities from \"./SavedCities\";\n\nexport default function Weather(props) {\n  \n  const cities = props.cities.map(val => val.cityName)\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col className=\"text-center\">\n          <p>City Weather Service</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typeahead\n            open={true}\n            maxResults={20}\n            placeholder=\"Type a city...\"\n            id=\"typeahead\"\n            options={cities} \n            onChange={props.saveCity} \n          />\n        </Col>\n        <Col>\n          <SavedCities savedCities={props.savedCities} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./styles.css\";\nimport cities from \"./us_cities.json\"\nimport { useState } from \"react\";\nimport Login from \"./LoginOrRegister\";\nimport Weather from \"./Weather\";\n\nexport default function App() {\n  const [usersRegistered, setUsersRegistered] = useState([\n    {\n      username: \"support\",\n      password: \"support\",\n    }\n  ])\n  const [isAuthenticated, setAuthentication] = useState(true)\n  const [savedCities, setSavedCities] = useState([]);\n  const miniCities = cities.map(val => ({\n    cityName: val.city,\n    stateID: val.state_id,\n    stateName: val.state_name,\n    lat: val.lat,\n    lng: val.lng,\n  }))\n  const saveCity = ([ city ]) => {\n    if(!city) return\n    // fetch weather data for city\n    // save city to the saveCities state with is weather data\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=3abd9c2df6a249e8abcf4f812de0a627&units=imperial`)\n    .then((res) => res.json())\n    .then(data => {\n      const newCity = miniCities.find(cityObj => cityObj.cityName === city)\n      return setSavedCities([...savedCities, {\n        ...newCity,\n        weatherData : data \n      }])\n    })\n    .catch(setSavedCities([...savedCities, { city, err : true }]))\n  }\n\n  const login = user => {\n    const found = usersRegistered.find(val => val.username === user.username && val.password === user.password)\n    if(!found) return false\n    setAuthentication(!isAuthenticated)\n  }\n  const register = user => {\n    const found = usersRegistered.find(val => val.username === user.username && val.password === user.password)\n    if(found) return false\n    setUsersRegistered([ ...usersRegistered, user ])\n  }\n\n  return isAuthenticated ? (\n    <Weather cities={miniCities} savedCities={savedCities} saveCity={saveCity} />\n  ) : (\n    <Login login={login} register={register}  />\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}